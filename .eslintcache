[{"C:\\Projetos\\buscar-endereco-via-cep\\src\\App.js":"1","C:\\Projetos\\buscar-endereco-via-cep\\src\\components\\CepMask\\index.js":"2","C:\\Projetos\\buscar-endereco-via-cep\\src\\components\\BuscarEndereco\\index.js":"3","C:\\Projetos\\buscar-endereco-via-cep\\src\\components\\BuscarEndereco\\styles.js":"4"},{"size":384,"mtime":1612885711505,"results":"5","hashOfConfig":"6"},{"size":322,"mtime":1612873584389,"results":"7","hashOfConfig":"6"},{"size":7547,"mtime":1615152298544,"results":"8","hashOfConfig":"6"},{"size":2056,"mtime":1615152280086,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lk9wji",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projetos\\buscar-endereco-via-cep\\src\\App.js",[],"C:\\Projetos\\buscar-endereco-via-cep\\src\\components\\CepMask\\index.js",[],"C:\\Projetos\\buscar-endereco-via-cep\\src\\components\\BuscarEndereco\\index.js",["19"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { TextField } from '@material-ui/core';\r\nimport MapOutlinedIcon from '@material-ui/icons/MapOutlined';\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport CepMask from '../CepMask/index';\r\nimport imageLoading from '../../assets/img/loading.gif';\r\nimport {\r\n  Container,\r\n  CardContainer,\r\n  TitleContainer,\r\n  Title,\r\n  IconeContainer,\r\n  MessageContainer,\r\n  ResultsContainer,\r\n  InputContainer,\r\n  ButtonContainer,\r\n  Button,\r\n  Loading,\r\n} from './styles';\r\n\r\nfunction BuscarEndereco() {\r\n\r\n  function validarCep(cep){\r\n    var ehValido = {valido:true, texto:\"\"};  \r\n      if(cep.length !== 9){        \r\n        ehValido = {valido:false, texto:\"O CEP deve ter 8 dígitos.\"}\r\n      }else{\r\n        ehValido = {valido:true, texto:\"\"}\r\n      }\r\n      setErros({cep:ehValido})\r\n      return ehValido;\r\n  }   \r\n\r\n  const novaBusca = () => {\r\n    setShowHeader('show');\r\n    setShowResults('hidden');\r\n    setShowMessage('hidden');   \r\n    setShowMessageServIndisponivel('hidden');\r\n  }\r\n  \r\n  const [cep, setCep] = useState(\"\");\r\n  const [erros, setErros] = useState({cep:{valido:true, texto:\"\"}});\r\n  const [informacoes, setInformacoes] = useState({\r\n    cep: '',\r\n    logradouro: '',\r\n    complemento: '',\r\n    bairro: '',\r\n    localidade: '',\r\n    uf: '',\r\n  });\r\n  const [showResults, setShowResults] = useState(\"hidden\");\r\n  const [showMessage, setShowMessage] = useState(\"hidden\");\r\n  const [showMessageServIndisponivel, setShowMessageServIndisponivel] = useState(\"hidden\");\r\n  const [showHeader, setShowHeader] = useState(\"show\");\r\n  const [loading, setLoading] = useState(\"hidden\");\r\n\r\n  const getInformacoes = () => {\r\n    var verificacao = validarCep(cep);\r\n    if(verificacao.valido === true){\r\n      setLoading('show');\r\n      setShowHeader('hidden');\r\n      setShowMessageServIndisponivel('hidden');\r\n\r\n    axios.get(`https://viacep.com.br/ws/${cep}/json/`)\r\n\r\n    .then(response => {\r\n        if(response.data.erro){\r\n        setShowResults('hidden');\r\n        setShowMessage('show');\r\n        setLoading('hidden');\r\n        } else{\r\n          setShowMessage('hidden'); \r\n          setTimeout( () => {\r\n            setShowResults('show');                        \r\n            setInformacoes(response.data);\r\n            setLoading('hidden')\r\n          },2000);\r\n        }\r\n      })\r\n      .catch((e) => { \r\n        setShowResults('hidden');\r\n        setShowMessage('hidden');\r\n        setShowHeader('hidden');\r\n        setShowMessageServIndisponivel('show');\r\n        setLoading('hidden')\r\n      });\r\n      }else{\r\n        setShowHeader('show');\r\n        setShowResults('hidden');\r\n        setShowMessage('hidden');    \r\n        setShowMessageServIndisponivel('hidden');\r\n      }\r\n    };\r\n \r\n  return (\r\n    <Container>\r\n      <CardContainer>    \r\n        <div className={showHeader}>\r\n          <IconeContainer>\r\n            <MapOutlinedIcon style={{ fontSize: 60 }} justify-content=\"center\" color=\"secondary\" />\r\n          </IconeContainer>\r\n        </div>\r\n        \r\n        <form\r\n          onSubmit={(event) => { // arrow function anônima\r\n            event.preventDefault(); // para prevenir o comportamento padrão do meu evento de Submit que é recarregar a página\r\n          }}\r\n        >\r\n\r\n        <Loading>\r\n          <div className={loading}>\r\n            <img src={imageLoading} />\r\n          </div>\r\n        </Loading>\r\n     \r\n          <div className={showHeader}>\r\n            <InputContainer>\r\n              <TextField\r\n                value={cep}\r\n                onChange={(event) => {          \r\n                  var valueWithMask = CepMask(event.target.value)\r\n                    setCep(\r\n                      valueWithMask\r\n                    );                         \r\n                    validarCep(valueWithMask);            \r\n                }}\r\n                error={!erros.cep.valido}\r\n                helperText={erros.cep.texto}      \r\n                placeholder=\"Digite seu CEP\"\r\n                variant=\"outlined\"  \r\n                justify-content= \"center\" \r\n                justify-align=\"center\"                     \r\n              />\r\n            </InputContainer>\r\n            \r\n            <ButtonContainer>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={getInformacoes}>\r\n                Encontrar\r\n            </Button>\r\n            </ButtonContainer>\r\n            \r\n            <TitleContainer>\r\n              <Title>\r\n                <p>Encontramos qualquer endereço do Brasil :)</p>\r\n                <p>Exemplo: 72015-180</p>\r\n              </Title>\r\n            </TitleContainer>\r\n          </div>\r\n        </form>\r\n\r\n        <MessageContainer>\r\n          <div id=\"message\" className={showMessage}>\r\n            <p>CEP inválido.</p>\r\n            <p>Faça uma Nova Busca!</p>\r\n            <IconeContainer>\r\n              <SentimentVeryDissatisfiedIcon style={{ fontSize: 40 }} color=\"secondary\" />\r\n            </IconeContainer>\r\n           </div>\r\n        </MessageContainer>   \r\n\r\n           <div id=\"message\" className={showMessage}>\r\n            <ButtonContainer>\r\n              <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={novaBusca}\r\n                >\r\n                  Nova Busca\r\n              </Button>\r\n            </ButtonContainer>   \r\n            </div>\r\n\r\n            <MessageContainer>\r\n              <div className={showMessageServIndisponivel}>\r\n                <p>SERVIÇO INDISPONÍVEL</p>\r\n              <IconeContainer>\r\n                <SentimentVeryDissatisfiedIcon style={{ fontSize: 40 }} color=\"secondary\" />\r\n              </IconeContainer>\r\n              </div>\r\n            </MessageContainer>   \r\n\r\n          <div className={showMessageServIndisponivel}>\r\n            <ButtonContainer>\r\n              <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={novaBusca}\r\n                >\r\n                  Nova Busca\r\n              </Button>\r\n            </ButtonContainer>   \r\n          </div>\r\n\r\n        <ResultsContainer>\r\n          <div className={showResults}>\r\n            <div>\r\n              <strong>CEP:</strong> <value>{informacoes.cep}</value>\r\n              <br></br><br></br>\r\n              <strong>Logradouro:</strong> <value>{informacoes.logradouro}</value>\r\n              <br></br><br></br>\r\n              <strong>Complemento:</strong> <value>{informacoes.complemento}</value>\r\n              <br></br><br></br>\r\n              <strong>Bairro:</strong> <value>{informacoes.bairro}</value>\r\n              <br></br><br></br>\r\n              <strong>Localidade:</strong> <value>{informacoes.localidade}</value>\r\n              <br></br><br></br>\r\n              <strong>UF:</strong> <value>{informacoes.uf}</value>\r\n            </div>\r\n          </div>\r\n        </ResultsContainer>    \r\n\r\n        <div className={showResults}>\r\n            <ButtonContainer>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={novaBusca}\r\n              >\r\n                Nova Busca\r\n              </Button>\r\n            </ButtonContainer>\r\n        </div>\r\n      </CardContainer>    \r\n    </Container>  \r\n  );\r\n}\r\n\r\nexport default BuscarEndereco;\r\n","C:\\Projetos\\buscar-endereco-via-cep\\src\\components\\BuscarEndereco\\styles.js",[],{"ruleId":"20","severity":1,"message":"21","line":113,"column":13,"nodeType":"22","endLine":113,"endColumn":39},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]